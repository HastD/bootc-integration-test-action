name: 'Run Standard VM using KVM'
description: 'A generic workflow to install dependencies, download a disk image, and launch a generic KVM virtual machine.'

on:
  workflow_call:
    inputs:
      runner:
        description: 'Runner for the job. Examples: ubuntu-latest, ubuntu-22.04.'
        default: 'ubuntu-latest'
        required: false
        type: string
      vm-name:
        description: 'Name for the virtual machine and its disk in libvirt.'
        default: 'vm-standard'
        required: false
        type: string
      vm-image-url:
        description: 'URL to the qcow2 disk image to be downloaded and used for the VM.'
        required: true
        type: string
      vcpus:
        description: 'Number of virtual CPUs for the VM. Must be less than the runner CPUs.'
        default: 3
        required: false
        type: number
      memory-mb:
        description: 'Amount of RAM in MB for the VM. Must be less than the runner memory.'
        default: 8192
        required: false
        type: number
      disk-size-gb:
        description: 'Size (in GB) of the virtual machine disk. Must be less than runner disk space.'
        default: 10
        required: false
        type: number
      startup-wait-seconds:
        description: 'Time in seconds to wait after VM startup before continuing.'
        default: 30
        required: false
        type: number
      additional-packages:
        description: 'Space-separated list of additional apt packages to install on the runner.'
        required: false
        type: string

jobs:
  run-vm:
    runs-on: ${{ inputs.runner }}
    steps:
      - name: 'Install Dependencies'
        run: |
          sudo apt-get update
          sudo apt-get install -y --no-install-recommends qemu-system-x86 libvirt-daemon-system libvirt-clients virtinst wget
          if [ -n "${{ inputs.additional-packages }}" ]; then
            sudo apt-get install -y --no-install-recommends ${{ inputs.additional-packages }}
          fi

      - name: 'Configure Libvirt and AppArmor'
        run: |
          sudo usermod -aG kvm,libvirt $USER
          sudo systemctl restart libvirt-daemon-system

      - name: 'Download VM Image'
        id: download_image
        run: |
          IMAGE_PATH="/tmp/${{ inputs.vm-name }}.qcow2"
          wget -q -O "${IMAGE_PATH}" "${{ inputs.vm-image-url }}"
          echo "image_path=${IMAGE_PATH}" >> $GITHUB_OUTPUT

      - name: 'Create and Start VM'
        run: |
          sudo virt-install \
            --connect="qemu:///system" \
            --name="${{ inputs.vm-name }}" \
            --vcpus="${{ inputs.vcpus }}" \
            --memory="${{ inputs.memory-mb }}" \
            --import \
            --disk="size=${{ inputs.disk-size-gb }},backing_store=${{ steps.download_image.outputs.image_path }}" \
            --os-variant="generic" \
            --graphics=none \
            --network=network=default \
            --noautoconsole

      - name: 'Wait for VM Startup'
        if: ${{ inputs.startup-wait-seconds > 0 }}
        run: |
          echo "Waiting ${{ inputs.startup-wait-seconds }} seconds for the VM to start..."
          sleep ${{ inputs.startup-wait-seconds }}